<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.distribution.dao.accountManager.mapper.more.MoreAccountManagerMapper" >
  <resultMap id="BaseResultMap" type="com.distribution.dao.accountManager.model.AccountManager" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="total_bonus" property="totalBonus" jdbcType="DECIMAL" />
    <result column="seed_amt" property="seedAmt" jdbcType="DECIMAL" />
    <result column="bonus_amt" property="bonusAmt" jdbcType="DECIMAL" />
    <result column="advance_amt" property="advanceAmt" jdbcType="DECIMAL" />
    <result column="create_id" property="createId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_id" property="updateId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, member_id, total_bonus, seed_amt, bonus_amt, advance_amt
  </sql>

  <select id="selectAccountManager" resultMap="BaseResultMap" parameterType="com.distribution.dao.accountManager.model.AccountManager" >
    select 
    <include refid="Base_Column_List" />
    from account_manager
    where member_id = #{memberId,jdbcType=INTEGER}
  </select>

 <update id="updateAccountManagerAmtWhileAdvance" parameterType="com.distribution.dao.accountManager.model.AccountManager">
        update account_manager
        set
            total_bonus = #{totalBonus,jdbcType=DECIMAL},
            bonus_amt = #{bonusAmt,jdbcType=DECIMAL},
            advance_amt = #{advanceAmt,jdbcType=DECIMAL},
            update_id = #{updateId,jdbcType=INTEGER},
            update_time = #{updateTime,jdbcType=TIMESTAMP}
            where member_id = #{memberId,jdbcType=INTEGER}
  </update>

  <update id="updateAccountManagerAmt" parameterType="com.distribution.dao.accountManager.model.AccountManager">
    update account_manager
    set
    total_bonus = #{totalBonus,jdbcType=DECIMAL},
    bonus_amt = #{bonusAmt,jdbcType=DECIMAL},
    update_id = #{updateId,jdbcType=INTEGER},
    update_time = #{updateTime,jdbcType=TIMESTAMP}
    where member_id = #{memberId,jdbcType=INTEGER}
  </update>
    <update id="updateAccountManager" parameterType="com.distribution.dao.accountManager.model.AccountManager">
        update account_manager
           set total_bonus = total_bonus - #{seedAmt,jdbcType=DECIMAL} - #{bonusAmt,jdbcType=DECIMAL},
               seed_amt =  seed_amt - #{seedAmt,jdbcType=DECIMAL},
               bonus_amt = bonus_amt - #{bonusAmt,jdbcType=DECIMAL},
               update_id = #{updateId,jdbcType=INTEGER},
               update_time = #{updateTime,jdbcType=TIMESTAMP}
         where member_id = #{memberId,jdbcType=INTEGER}
    </update>

  <select id="getSeedsAndBondsByMemberId" parameterType="java.lang.Integer" resultType="com.distribution.dao.member.model.more.MoreMember">
      SELECT
        seed_amt AS seedAmount,
        bonus_amt AS bonusAmount,
        advance_amt AS actualAmount
      FROM
        account_manager
      WHERE
        member_id = #{memberId}
  </select>

  <select id="selectByMemberId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
      SELECT * FROM account_manager WHERE member_id = #{memberId}
  </select>
    <update id="updateByMemberId" parameterType="com.distribution.dao.accountManager.model.AccountManager">
        UPDATE account_manager
        SET
        total_bonus = #{totalBonus},
        bonus_amt = #{bonusAmt},
        update_id = #{updateId},
        update_time = #{updateTime}
        WHERE member_id = #{memberId}
    </update>
    <select id="listBonusTemp" resultType="java.util.Map" parameterType="java.lang.String">
      SELECT tep.member_id,
		sum(actual_amout)as total,
		sum(actual_amout)*0.6 as bonus,
		sum(actual_amout)*0.4 as seed 
		from 
		(SELECT min(id),member_id,bonus_type,amout,actual_amout,order_id
		from member_bonus 
		where bonus_type = 4 and DATE(create_date) = DATE(#{dateStr}) 
		group by member_id,bonus_type,amout,actual_amout,order_id) 
		tep
		group by tep.member_id
    </select>
    <delete id="deleteAccountManager" parameterType="java.lang.Integer">
        delete from account_manager where member_id = #{memberId}
    </delete>
</mapper>