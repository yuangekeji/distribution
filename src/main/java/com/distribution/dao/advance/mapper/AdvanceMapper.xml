<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.distribution.dao.advance.mapper.advanceMapper" >
  <resultMap id="BaseResultMap" type="com.distribution.dao.advance.model.advance" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="bank_name" property="bankName" jdbcType="VARCHAR" />
    <result column="card_no" property="cardNo" jdbcType="VARCHAR" />
    <result column="card_name" property="cardName" jdbcType="VARCHAR" />
    <result column="req_amt" property="reqAmt" jdbcType="DECIMAL" />
    <result column="act_amt" property="actAmt" jdbcType="DECIMAL" />
    <result column="fee_amt" property="feeAmt" jdbcType="DECIMAL" />
    <result column="request_date" property="requestDate" jdbcType="DATE" />
    <result column="approve_date" property="approveDate" jdbcType="DATE" />
    <result column="statues" property="statues" jdbcType="CHAR" />
    <result column="create_id" property="createId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_id" property="updateId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, member_id, bank_name, card_no, card_name, req_amt, act_amt, fee_amt, request_date, 
    approve_date, statues, create_id, create_time, update_id, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.distribution.dao.advance.model.advanceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from advance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from advance
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from advance
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.distribution.dao.advance.model.advanceExample" >
    delete from advance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.distribution.dao.advance.model.advance" >
    insert into advance (id, member_id, bank_name, 
      card_no, card_name, req_amt, 
      act_amt, fee_amt, request_date, 
      approve_date, statues, create_id, 
      create_time, update_id, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{memberId,jdbcType=INTEGER}, #{bankName,jdbcType=VARCHAR}, 
      #{cardNo,jdbcType=VARCHAR}, #{cardName,jdbcType=VARCHAR}, #{reqAmt,jdbcType=DECIMAL}, 
      #{actAmt,jdbcType=DECIMAL}, #{feeAmt,jdbcType=DECIMAL}, #{requestDate,jdbcType=DATE}, 
      #{approveDate,jdbcType=DATE}, #{statues,jdbcType=CHAR}, #{createId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateId,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.distribution.dao.advance.model.advance" >
    insert into advance
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="bankName != null" >
        bank_name,
      </if>
      <if test="cardNo != null" >
        card_no,
      </if>
      <if test="cardName != null" >
        card_name,
      </if>
      <if test="reqAmt != null" >
        req_amt,
      </if>
      <if test="actAmt != null" >
        act_amt,
      </if>
      <if test="feeAmt != null" >
        fee_amt,
      </if>
      <if test="requestDate != null" >
        request_date,
      </if>
      <if test="approveDate != null" >
        approve_date,
      </if>
      <if test="statues != null" >
        statues,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateId != null" >
        update_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="bankName != null" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null" >
        #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="cardName != null" >
        #{cardName,jdbcType=VARCHAR},
      </if>
      <if test="reqAmt != null" >
        #{reqAmt,jdbcType=DECIMAL},
      </if>
      <if test="actAmt != null" >
        #{actAmt,jdbcType=DECIMAL},
      </if>
      <if test="feeAmt != null" >
        #{feeAmt,jdbcType=DECIMAL},
      </if>
      <if test="requestDate != null" >
        #{requestDate,jdbcType=DATE},
      </if>
      <if test="approveDate != null" >
        #{approveDate,jdbcType=DATE},
      </if>
      <if test="statues != null" >
        #{statues,jdbcType=CHAR},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null" >
        #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.distribution.dao.advance.model.advanceExample" resultType="java.lang.Integer" >
    select count(*) from advance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update advance
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.memberId != null" >
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.bankName != null" >
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.cardNo != null" >
        card_no = #{record.cardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.cardName != null" >
        card_name = #{record.cardName,jdbcType=VARCHAR},
      </if>
      <if test="record.reqAmt != null" >
        req_amt = #{record.reqAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.actAmt != null" >
        act_amt = #{record.actAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.feeAmt != null" >
        fee_amt = #{record.feeAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.requestDate != null" >
        request_date = #{record.requestDate,jdbcType=DATE},
      </if>
      <if test="record.approveDate != null" >
        approve_date = #{record.approveDate,jdbcType=DATE},
      </if>
      <if test="record.statues != null" >
        statues = #{record.statues,jdbcType=CHAR},
      </if>
      <if test="record.createId != null" >
        create_id = #{record.createId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateId != null" >
        update_id = #{record.updateId,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update advance
    set id = #{record.id,jdbcType=INTEGER},
      member_id = #{record.memberId,jdbcType=INTEGER},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      card_no = #{record.cardNo,jdbcType=VARCHAR},
      card_name = #{record.cardName,jdbcType=VARCHAR},
      req_amt = #{record.reqAmt,jdbcType=DECIMAL},
      act_amt = #{record.actAmt,jdbcType=DECIMAL},
      fee_amt = #{record.feeAmt,jdbcType=DECIMAL},
      request_date = #{record.requestDate,jdbcType=DATE},
      approve_date = #{record.approveDate,jdbcType=DATE},
      statues = #{record.statues,jdbcType=CHAR},
      create_id = #{record.createId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_id = #{record.updateId,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.distribution.dao.advance.model.advance" >
    update advance
    <set >
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="bankName != null" >
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null" >
        card_no = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="cardName != null" >
        card_name = #{cardName,jdbcType=VARCHAR},
      </if>
      <if test="reqAmt != null" >
        req_amt = #{reqAmt,jdbcType=DECIMAL},
      </if>
      <if test="actAmt != null" >
        act_amt = #{actAmt,jdbcType=DECIMAL},
      </if>
      <if test="feeAmt != null" >
        fee_amt = #{feeAmt,jdbcType=DECIMAL},
      </if>
      <if test="requestDate != null" >
        request_date = #{requestDate,jdbcType=DATE},
      </if>
      <if test="approveDate != null" >
        approve_date = #{approveDate,jdbcType=DATE},
      </if>
      <if test="statues != null" >
        statues = #{statues,jdbcType=CHAR},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null" >
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.distribution.dao.advance.model.advance" >
    update advance
    set member_id = #{memberId,jdbcType=INTEGER},
      bank_name = #{bankName,jdbcType=VARCHAR},
      card_no = #{cardNo,jdbcType=VARCHAR},
      card_name = #{cardName,jdbcType=VARCHAR},
      req_amt = #{reqAmt,jdbcType=DECIMAL},
      act_amt = #{actAmt,jdbcType=DECIMAL},
      fee_amt = #{feeAmt,jdbcType=DECIMAL},
      request_date = #{requestDate,jdbcType=DATE},
      approve_date = #{approveDate,jdbcType=DATE},
      statues = #{statues,jdbcType=CHAR},
      create_id = #{createId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_id = #{updateId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>