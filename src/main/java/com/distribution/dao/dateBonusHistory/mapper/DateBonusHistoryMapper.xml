<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.distribution.dao.dateBonusHistory.mapper.DateBonusHistoryMapper">
  <resultMap id="BaseResultMap" type="com.distribution.dao.dateBonusHistory.model.DateBonusHistory">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="total_sales" jdbcType="DECIMAL" property="totalSales" />
    <result column="dividend_total" jdbcType="DECIMAL" property="dividendTotal" />
    <result column="jd_bonus_total" jdbcType="DECIMAL" property="jdBonusTotal" />
    <result column="use_dividend_total" jdbcType="DECIMAL" property="useDividendTotal" />
    <result column="use_jd_bonus_total" jdbcType="DECIMAL" property="useJdBonusTotal" />
    <result column="remain_dividend" jdbcType="DECIMAL" property="remainDividend" />
    <result column="remain_jd_bonus" jdbcType="DECIMAL" property="remainJdBonus" />
    <result column="create_id" jdbcType="INTEGER" property="createId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_id" jdbcType="INTEGER" property="updateId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="alarm_status" jdbcType="INTEGER" property="alarmStatus" />
    <result column="jd_alarm_status" jdbcType="INTEGER" property="jdAlarmStatus" />
    <result column="all_total_sales" jdbcType="DECIMAL" property="allTotalSales" />
    <result column="all_total_bonus" jdbcType="DECIMAL" property="allTotalBonus" />
    <result column="all_total_advance" jdbcType="DECIMAL" property="allTotalAdvance" />
    <result column="day_advance" jdbcType="DECIMAL" property="dayAdvance" />
    <result column="day_actual_bonus" jdbcType="DECIMAL" property="dayActualBonus" />
    <result column="day_discount_sales" jdbcType="DECIMAL" property="dayDiscountSales" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, date, total_sales, dividend_total, jd_bonus_total, use_dividend_total, use_jd_bonus_total, 
    remain_dividend, remain_jd_bonus, create_id, create_time, update_id, update_time, 
    alarm_status, jd_alarm_status, all_total_sales, all_total_bonus, all_total_advance, 
    day_advance, day_actual_bonus, day_discount_sales
  </sql>
  <select id="selectByExample" parameterType="com.distribution.dao.dateBonusHistory.model.DateBonusHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from date_bonus_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from date_bonus_history
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from date_bonus_history
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.distribution.dao.dateBonusHistory.model.DateBonusHistoryExample">
    delete from date_bonus_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.distribution.dao.dateBonusHistory.model.DateBonusHistory">
    insert into date_bonus_history (id, date, total_sales, 
      dividend_total, jd_bonus_total, use_dividend_total, 
      use_jd_bonus_total, remain_dividend, remain_jd_bonus, 
      create_id, create_time, update_id, 
      update_time, alarm_status, jd_alarm_status, 
      all_total_sales, all_total_bonus, all_total_advance, 
      day_advance, day_actual_bonus, day_discount_sales
      )
    values (#{id,jdbcType=INTEGER}, #{date,jdbcType=TIMESTAMP}, #{totalSales,jdbcType=DECIMAL}, 
      #{dividendTotal,jdbcType=DECIMAL}, #{jdBonusTotal,jdbcType=DECIMAL}, #{useDividendTotal,jdbcType=DECIMAL}, 
      #{useJdBonusTotal,jdbcType=DECIMAL}, #{remainDividend,jdbcType=DECIMAL}, #{remainJdBonus,jdbcType=DECIMAL}, 
      #{createId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateId,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{alarmStatus,jdbcType=INTEGER}, #{jdAlarmStatus,jdbcType=INTEGER}, 
      #{allTotalSales,jdbcType=DECIMAL}, #{allTotalBonus,jdbcType=DECIMAL}, #{allTotalAdvance,jdbcType=DECIMAL}, 
      #{dayAdvance,jdbcType=DECIMAL}, #{dayActualBonus,jdbcType=DECIMAL}, #{dayDiscountSales,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.distribution.dao.dateBonusHistory.model.DateBonusHistory">
    insert into date_bonus_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="totalSales != null">
        total_sales,
      </if>
      <if test="dividendTotal != null">
        dividend_total,
      </if>
      <if test="jdBonusTotal != null">
        jd_bonus_total,
      </if>
      <if test="useDividendTotal != null">
        use_dividend_total,
      </if>
      <if test="useJdBonusTotal != null">
        use_jd_bonus_total,
      </if>
      <if test="remainDividend != null">
        remain_dividend,
      </if>
      <if test="remainJdBonus != null">
        remain_jd_bonus,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="alarmStatus != null">
        alarm_status,
      </if>
      <if test="jdAlarmStatus != null">
        jd_alarm_status,
      </if>
      <if test="allTotalSales != null">
        all_total_sales,
      </if>
      <if test="allTotalBonus != null">
        all_total_bonus,
      </if>
      <if test="allTotalAdvance != null">
        all_total_advance,
      </if>
      <if test="dayAdvance != null">
        day_advance,
      </if>
      <if test="dayActualBonus != null">
        day_actual_bonus,
      </if>
      <if test="dayDiscountSales != null">
        day_discount_sales,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="totalSales != null">
        #{totalSales,jdbcType=DECIMAL},
      </if>
      <if test="dividendTotal != null">
        #{dividendTotal,jdbcType=DECIMAL},
      </if>
      <if test="jdBonusTotal != null">
        #{jdBonusTotal,jdbcType=DECIMAL},
      </if>
      <if test="useDividendTotal != null">
        #{useDividendTotal,jdbcType=DECIMAL},
      </if>
      <if test="useJdBonusTotal != null">
        #{useJdBonusTotal,jdbcType=DECIMAL},
      </if>
      <if test="remainDividend != null">
        #{remainDividend,jdbcType=DECIMAL},
      </if>
      <if test="remainJdBonus != null">
        #{remainJdBonus,jdbcType=DECIMAL},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="alarmStatus != null">
        #{alarmStatus,jdbcType=INTEGER},
      </if>
      <if test="jdAlarmStatus != null">
        #{jdAlarmStatus,jdbcType=INTEGER},
      </if>
      <if test="allTotalSales != null">
        #{allTotalSales,jdbcType=DECIMAL},
      </if>
      <if test="allTotalBonus != null">
        #{allTotalBonus,jdbcType=DECIMAL},
      </if>
      <if test="allTotalAdvance != null">
        #{allTotalAdvance,jdbcType=DECIMAL},
      </if>
      <if test="dayAdvance != null">
        #{dayAdvance,jdbcType=DECIMAL},
      </if>
      <if test="dayActualBonus != null">
        #{dayActualBonus,jdbcType=DECIMAL},
      </if>
      <if test="dayDiscountSales != null">
        #{dayDiscountSales,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.distribution.dao.dateBonusHistory.model.DateBonusHistoryExample" resultType="java.lang.Long">
    select count(*) from date_bonus_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update date_bonus_history
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.totalSales != null">
        total_sales = #{record.totalSales,jdbcType=DECIMAL},
      </if>
      <if test="record.dividendTotal != null">
        dividend_total = #{record.dividendTotal,jdbcType=DECIMAL},
      </if>
      <if test="record.jdBonusTotal != null">
        jd_bonus_total = #{record.jdBonusTotal,jdbcType=DECIMAL},
      </if>
      <if test="record.useDividendTotal != null">
        use_dividend_total = #{record.useDividendTotal,jdbcType=DECIMAL},
      </if>
      <if test="record.useJdBonusTotal != null">
        use_jd_bonus_total = #{record.useJdBonusTotal,jdbcType=DECIMAL},
      </if>
      <if test="record.remainDividend != null">
        remain_dividend = #{record.remainDividend,jdbcType=DECIMAL},
      </if>
      <if test="record.remainJdBonus != null">
        remain_jd_bonus = #{record.remainJdBonus,jdbcType=DECIMAL},
      </if>
      <if test="record.createId != null">
        create_id = #{record.createId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateId != null">
        update_id = #{record.updateId,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.alarmStatus != null">
        alarm_status = #{record.alarmStatus,jdbcType=INTEGER},
      </if>
      <if test="record.jdAlarmStatus != null">
        jd_alarm_status = #{record.jdAlarmStatus,jdbcType=INTEGER},
      </if>
      <if test="record.allTotalSales != null">
        all_total_sales = #{record.allTotalSales,jdbcType=DECIMAL},
      </if>
      <if test="record.allTotalBonus != null">
        all_total_bonus = #{record.allTotalBonus,jdbcType=DECIMAL},
      </if>
      <if test="record.allTotalAdvance != null">
        all_total_advance = #{record.allTotalAdvance,jdbcType=DECIMAL},
      </if>
      <if test="record.dayAdvance != null">
        day_advance = #{record.dayAdvance,jdbcType=DECIMAL},
      </if>
      <if test="record.dayActualBonus != null">
        day_actual_bonus = #{record.dayActualBonus,jdbcType=DECIMAL},
      </if>
      <if test="record.dayDiscountSales != null">
        day_discount_sales = #{record.dayDiscountSales,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update date_bonus_history
    set id = #{record.id,jdbcType=INTEGER},
      date = #{record.date,jdbcType=TIMESTAMP},
      total_sales = #{record.totalSales,jdbcType=DECIMAL},
      dividend_total = #{record.dividendTotal,jdbcType=DECIMAL},
      jd_bonus_total = #{record.jdBonusTotal,jdbcType=DECIMAL},
      use_dividend_total = #{record.useDividendTotal,jdbcType=DECIMAL},
      use_jd_bonus_total = #{record.useJdBonusTotal,jdbcType=DECIMAL},
      remain_dividend = #{record.remainDividend,jdbcType=DECIMAL},
      remain_jd_bonus = #{record.remainJdBonus,jdbcType=DECIMAL},
      create_id = #{record.createId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_id = #{record.updateId,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      alarm_status = #{record.alarmStatus,jdbcType=INTEGER},
      jd_alarm_status = #{record.jdAlarmStatus,jdbcType=INTEGER},
      all_total_sales = #{record.allTotalSales,jdbcType=DECIMAL},
      all_total_bonus = #{record.allTotalBonus,jdbcType=DECIMAL},
      all_total_advance = #{record.allTotalAdvance,jdbcType=DECIMAL},
      day_advance = #{record.dayAdvance,jdbcType=DECIMAL},
      day_actual_bonus = #{record.dayActualBonus,jdbcType=DECIMAL},
      day_discount_sales = #{record.dayDiscountSales,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.distribution.dao.dateBonusHistory.model.DateBonusHistory">
    update date_bonus_history
    <set>
      <if test="date != null">
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="totalSales != null">
        total_sales = #{totalSales,jdbcType=DECIMAL},
      </if>
      <if test="dividendTotal != null">
        dividend_total = #{dividendTotal,jdbcType=DECIMAL},
      </if>
      <if test="jdBonusTotal != null">
        jd_bonus_total = #{jdBonusTotal,jdbcType=DECIMAL},
      </if>
      <if test="useDividendTotal != null">
        use_dividend_total = #{useDividendTotal,jdbcType=DECIMAL},
      </if>
      <if test="useJdBonusTotal != null">
        use_jd_bonus_total = #{useJdBonusTotal,jdbcType=DECIMAL},
      </if>
      <if test="remainDividend != null">
        remain_dividend = #{remainDividend,jdbcType=DECIMAL},
      </if>
      <if test="remainJdBonus != null">
        remain_jd_bonus = #{remainJdBonus,jdbcType=DECIMAL},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="alarmStatus != null">
        alarm_status = #{alarmStatus,jdbcType=INTEGER},
      </if>
      <if test="jdAlarmStatus != null">
        jd_alarm_status = #{jdAlarmStatus,jdbcType=INTEGER},
      </if>
      <if test="allTotalSales != null">
        all_total_sales = #{allTotalSales,jdbcType=DECIMAL},
      </if>
      <if test="allTotalBonus != null">
        all_total_bonus = #{allTotalBonus,jdbcType=DECIMAL},
      </if>
      <if test="allTotalAdvance != null">
        all_total_advance = #{allTotalAdvance,jdbcType=DECIMAL},
      </if>
      <if test="dayAdvance != null">
        day_advance = #{dayAdvance,jdbcType=DECIMAL},
      </if>
      <if test="dayActualBonus != null">
        day_actual_bonus = #{dayActualBonus,jdbcType=DECIMAL},
      </if>
      <if test="dayDiscountSales != null">
        day_discount_sales = #{dayDiscountSales,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.distribution.dao.dateBonusHistory.model.DateBonusHistory">
    update date_bonus_history
    set date = #{date,jdbcType=TIMESTAMP},
      total_sales = #{totalSales,jdbcType=DECIMAL},
      dividend_total = #{dividendTotal,jdbcType=DECIMAL},
      jd_bonus_total = #{jdBonusTotal,jdbcType=DECIMAL},
      use_dividend_total = #{useDividendTotal,jdbcType=DECIMAL},
      use_jd_bonus_total = #{useJdBonusTotal,jdbcType=DECIMAL},
      remain_dividend = #{remainDividend,jdbcType=DECIMAL},
      remain_jd_bonus = #{remainJdBonus,jdbcType=DECIMAL},
      create_id = #{createId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_id = #{updateId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      alarm_status = #{alarmStatus,jdbcType=INTEGER},
      jd_alarm_status = #{jdAlarmStatus,jdbcType=INTEGER},
      all_total_sales = #{allTotalSales,jdbcType=DECIMAL},
      all_total_bonus = #{allTotalBonus,jdbcType=DECIMAL},
      all_total_advance = #{allTotalAdvance,jdbcType=DECIMAL},
      day_advance = #{dayAdvance,jdbcType=DECIMAL},
      day_actual_bonus = #{dayActualBonus,jdbcType=DECIMAL},
      day_discount_sales = #{dayDiscountSales,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>