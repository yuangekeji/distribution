<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.distribution.dao.dividend.mapper.more.MoreDividendMapper" >
  <resultMap id="BaseResultMap" type="com.distribution.dao.dividend.model.Dividend" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="BIGINT" />
    <result column="order_amount" property="orderAmount" jdbcType="DECIMAL" />
    <result column="dividend_count" property="dividendCount" jdbcType="INTEGER" />
    <result column="received_amount" property="receivedAmount" jdbcType="DECIMAL" />
    <result column="remain_amount" property="remainAmount" jdbcType="DECIMAL" />
    <result column="dividend_limit" property="dividendLimit" jdbcType="DECIMAL" />
    <result column="dividend_status" property="dividendStatus" jdbcType="VARCHAR" />
    <result column="mgmt_fee" property="mgmtFee" jdbcType="DECIMAL" />
    <result column="create_id" property="createId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_id" property="updateId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, member_id, order_id, order_no, order_amount, dividend_count, received_amount, 
    remain_amount, dividend_limit, dividend_status, mgmt_fee, create_id, create_time, 
    update_id, update_time
  </sql>
  <sql id="where">
    <where>
      <if test="parameterMap.memberId!=null and parameterMap.memberId!=''">
        AND member_id = #{parameterMap.memberId}
      </if>
      <if test="parameterMap.dividendStatus!=null and parameterMap.dividendStatus!=''">
        AND dividend_status = #{parameterMap.dividendStatus}
      </if>
      <if test="parameterMap.orderNo!=null and parameterMap.orderNo!=''">
        AND order_no LIKE concat('%',concat('*',LTrim(RTrim(#{parameterMap.orderNo}))),'%') ESCAPE '*'
      </if>
    </where>
  </sql>
  <sql id="pageLimit">
    <if test="pageSize!=null">
      <if test="offset!=null">
        LIMIT #{pageSize} OFFSET #{offset}
      </if>
    </if>
  </sql>
  <select id="getDividendList" resultMap="BaseResultMap" parameterType="com.distribution.common.utils.Page" >
    select
    <include refid="Base_Column_List" />
    from dividend
    <include refid="where"/>
    order by id desc
    <include refid="pageLimit"/>

  </select>
  <select id="getDividendListCount" resultType="java.lang.Integer" parameterType="com.distribution.common.utils.Page" >
    select
     count(0) as count
    from dividend
    <include refid="where"/>
  </select>
  <select id="listAllNeedSendDividends" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List" />
	from dividend
	where dividend_status != 2 and received_amount<![CDATA[<]]>dividend_limit
  </select>
  <select id="getAllNeedSendDividendCount" resultType="java.lang.Integer">
  	select IFNULL(sum(dividend_count),0) as totalAcount
	from dividend
	where dividend_status != 2 and received_amount<![CDATA[<]]>dividend_limit
  </select>
  <update id="updateAllNeedSendDividends" parameterType="java.util.Map">
  	<foreach collection="list" item="record" index="index" separator=";">
  	  update dividend
  	  set 
      received_amount = #{record.receivedAmount,jdbcType=DECIMAL},
      remain_amount = #{record.remainAmount,jdbcType=DECIMAL},
      dividend_status = #{record.dividendStatus,jdbcType=VARCHAR},
      update_id = #{record.updateId,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
      where id = #{record.id,jdbcType=INTEGER}
  	</foreach>
  </update>
</mapper>