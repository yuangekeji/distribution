<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.distribution.dao.goods.mapper.GoodsMapper" >
  <resultMap id="BaseResultMap" type="com.distribution.dao.goods.model.Goods" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
    <result column="goods_num" property="goodsNum" jdbcType="INTEGER" />
    <result column="goods_price" property="goodsPrice" jdbcType="DECIMAL" />
    <result column="list_time" property="listTime" jdbcType="TIMESTAMP" />
    <result column="goods_type" property="goodsType" jdbcType="VARCHAR" />
    <result column="specifications" property="specifications" jdbcType="VARCHAR" />
    <result column="net_content" property="netContent" jdbcType="VARCHAR" />
    <result column="product_standard" property="productStandard" jdbcType="VARCHAR" />
    <result column="license_key" property="licenseKey" jdbcType="VARCHAR" />
    <result column="storage_conditions" property="storageConditions" jdbcType="VARCHAR" />
    <result column="quality_guarantee_period" property="qualityGuaranteePeriod" jdbcType="VARCHAR" />
    <result column="edible_method" property="edibleMethod" jdbcType="VARCHAR" />
    <result column="matters_needing_attention" property="mattersNeedingAttention" jdbcType="VARCHAR" />
    <result column="manufacturer" property="manufacturer" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="place_of_origin" property="placeOfOrigin" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="delete_flag" property="deleteFlag" jdbcType="VARCHAR" />
    <result column="info" property="info" jdbcType="VARCHAR" />
    <result column="imge_url" property="imgeUrl" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, goods_name, goods_num, goods_price, list_time, goods_type, specifications, net_content, 
    product_standard, license_key, storage_conditions, quality_guarantee_period, edible_method, 
    matters_needing_attention, manufacturer, address, place_of_origin, create_time, delete_flag, 
    info, imge_url
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.distribution.dao.goods.model.GoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.distribution.dao.goods.model.GoodsExample" >
    delete from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.distribution.dao.goods.model.Goods" >
    insert into goods (id, goods_name, goods_num, 
      goods_price, list_time, goods_type, 
      specifications, net_content, product_standard, 
      license_key, storage_conditions, quality_guarantee_period, 
      edible_method, matters_needing_attention, 
      manufacturer, address, place_of_origin, 
      create_time, delete_flag, info, 
      imge_url)
    values (#{id,jdbcType=INTEGER}, #{goodsName,jdbcType=VARCHAR}, #{goodsNum,jdbcType=INTEGER}, 
      #{goodsPrice,jdbcType=DECIMAL}, #{listTime,jdbcType=TIMESTAMP}, #{goodsType,jdbcType=VARCHAR}, 
      #{specifications,jdbcType=VARCHAR}, #{netContent,jdbcType=VARCHAR}, #{productStandard,jdbcType=VARCHAR}, 
      #{licenseKey,jdbcType=VARCHAR}, #{storageConditions,jdbcType=VARCHAR}, #{qualityGuaranteePeriod,jdbcType=VARCHAR}, 
      #{edibleMethod,jdbcType=VARCHAR}, #{mattersNeedingAttention,jdbcType=VARCHAR}, 
      #{manufacturer,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{placeOfOrigin,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{deleteFlag,jdbcType=VARCHAR}, #{info,jdbcType=VARCHAR}, 
      #{imgeUrl,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.distribution.dao.goods.model.Goods" >
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="goodsName != null" >
        goods_name,
      </if>
      <if test="goodsNum != null" >
        goods_num,
      </if>
      <if test="goodsPrice != null" >
        goods_price,
      </if>
      <if test="listTime != null" >
        list_time,
      </if>
      <if test="goodsType != null" >
        goods_type,
      </if>
      <if test="specifications != null" >
        specifications,
      </if>
      <if test="netContent != null" >
        net_content,
      </if>
      <if test="productStandard != null" >
        product_standard,
      </if>
      <if test="licenseKey != null" >
        license_key,
      </if>
      <if test="storageConditions != null" >
        storage_conditions,
      </if>
      <if test="qualityGuaranteePeriod != null" >
        quality_guarantee_period,
      </if>
      <if test="edibleMethod != null" >
        edible_method,
      </if>
      <if test="mattersNeedingAttention != null" >
        matters_needing_attention,
      </if>
      <if test="manufacturer != null" >
        manufacturer,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="placeOfOrigin != null" >
        place_of_origin,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="deleteFlag != null" >
        delete_flag,
      </if>
      <if test="info != null" >
        info,
      </if>
      <if test="imgeUrl != null" >
        imge_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null" >
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsNum != null" >
        #{goodsNum,jdbcType=INTEGER},
      </if>
      <if test="goodsPrice != null" >
        #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="listTime != null" >
        #{listTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsType != null" >
        #{goodsType,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null" >
        #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="netContent != null" >
        #{netContent,jdbcType=VARCHAR},
      </if>
      <if test="productStandard != null" >
        #{productStandard,jdbcType=VARCHAR},
      </if>
      <if test="licenseKey != null" >
        #{licenseKey,jdbcType=VARCHAR},
      </if>
      <if test="storageConditions != null" >
        #{storageConditions,jdbcType=VARCHAR},
      </if>
      <if test="qualityGuaranteePeriod != null" >
        #{qualityGuaranteePeriod,jdbcType=VARCHAR},
      </if>
      <if test="edibleMethod != null" >
        #{edibleMethod,jdbcType=VARCHAR},
      </if>
      <if test="mattersNeedingAttention != null" >
        #{mattersNeedingAttention,jdbcType=VARCHAR},
      </if>
      <if test="manufacturer != null" >
        #{manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="placeOfOrigin != null" >
        #{placeOfOrigin,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null" >
        #{deleteFlag,jdbcType=VARCHAR},
      </if>
      <if test="info != null" >
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="imgeUrl != null" >
        #{imgeUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.distribution.dao.goods.model.GoodsExample" resultType="java.lang.Integer" >
    select count(*) from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goods
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null" >
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsNum != null" >
        goods_num = #{record.goodsNum,jdbcType=INTEGER},
      </if>
      <if test="record.goodsPrice != null" >
        goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.listTime != null" >
        list_time = #{record.listTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.goodsType != null" >
        goods_type = #{record.goodsType,jdbcType=VARCHAR},
      </if>
      <if test="record.specifications != null" >
        specifications = #{record.specifications,jdbcType=VARCHAR},
      </if>
      <if test="record.netContent != null" >
        net_content = #{record.netContent,jdbcType=VARCHAR},
      </if>
      <if test="record.productStandard != null" >
        product_standard = #{record.productStandard,jdbcType=VARCHAR},
      </if>
      <if test="record.licenseKey != null" >
        license_key = #{record.licenseKey,jdbcType=VARCHAR},
      </if>
      <if test="record.storageConditions != null" >
        storage_conditions = #{record.storageConditions,jdbcType=VARCHAR},
      </if>
      <if test="record.qualityGuaranteePeriod != null" >
        quality_guarantee_period = #{record.qualityGuaranteePeriod,jdbcType=VARCHAR},
      </if>
      <if test="record.edibleMethod != null" >
        edible_method = #{record.edibleMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.mattersNeedingAttention != null" >
        matters_needing_attention = #{record.mattersNeedingAttention,jdbcType=VARCHAR},
      </if>
      <if test="record.manufacturer != null" >
        manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.placeOfOrigin != null" >
        place_of_origin = #{record.placeOfOrigin,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteFlag != null" >
        delete_flag = #{record.deleteFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.info != null" >
        info = #{record.info,jdbcType=VARCHAR},
      </if>
      <if test="record.imgeUrl != null" >
        imge_url = #{record.imgeUrl,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goods
    set id = #{record.id,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_num = #{record.goodsNum,jdbcType=INTEGER},
      goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      list_time = #{record.listTime,jdbcType=TIMESTAMP},
      goods_type = #{record.goodsType,jdbcType=VARCHAR},
      specifications = #{record.specifications,jdbcType=VARCHAR},
      net_content = #{record.netContent,jdbcType=VARCHAR},
      product_standard = #{record.productStandard,jdbcType=VARCHAR},
      license_key = #{record.licenseKey,jdbcType=VARCHAR},
      storage_conditions = #{record.storageConditions,jdbcType=VARCHAR},
      quality_guarantee_period = #{record.qualityGuaranteePeriod,jdbcType=VARCHAR},
      edible_method = #{record.edibleMethod,jdbcType=VARCHAR},
      matters_needing_attention = #{record.mattersNeedingAttention,jdbcType=VARCHAR},
      manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      place_of_origin = #{record.placeOfOrigin,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      delete_flag = #{record.deleteFlag,jdbcType=VARCHAR},
      info = #{record.info,jdbcType=VARCHAR},
      imge_url = #{record.imgeUrl,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.distribution.dao.goods.model.Goods" >
    update goods
    <set >
      <if test="goodsName != null" >
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsNum != null" >
        goods_num = #{goodsNum,jdbcType=INTEGER},
      </if>
      <if test="goodsPrice != null" >
        goods_price = #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="listTime != null" >
        list_time = #{listTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsType != null" >
        goods_type = #{goodsType,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null" >
        specifications = #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="netContent != null" >
        net_content = #{netContent,jdbcType=VARCHAR},
      </if>
      <if test="productStandard != null" >
        product_standard = #{productStandard,jdbcType=VARCHAR},
      </if>
      <if test="licenseKey != null" >
        license_key = #{licenseKey,jdbcType=VARCHAR},
      </if>
      <if test="storageConditions != null" >
        storage_conditions = #{storageConditions,jdbcType=VARCHAR},
      </if>
      <if test="qualityGuaranteePeriod != null" >
        quality_guarantee_period = #{qualityGuaranteePeriod,jdbcType=VARCHAR},
      </if>
      <if test="edibleMethod != null" >
        edible_method = #{edibleMethod,jdbcType=VARCHAR},
      </if>
      <if test="mattersNeedingAttention != null" >
        matters_needing_attention = #{mattersNeedingAttention,jdbcType=VARCHAR},
      </if>
      <if test="manufacturer != null" >
        manufacturer = #{manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="placeOfOrigin != null" >
        place_of_origin = #{placeOfOrigin,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null" >
        delete_flag = #{deleteFlag,jdbcType=VARCHAR},
      </if>
      <if test="info != null" >
        info = #{info,jdbcType=VARCHAR},
      </if>
      <if test="imgeUrl != null" >
        imge_url = #{imgeUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.distribution.dao.goods.model.Goods" >
    update goods
    set goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_num = #{goodsNum,jdbcType=INTEGER},
      goods_price = #{goodsPrice,jdbcType=DECIMAL},
      list_time = #{listTime,jdbcType=TIMESTAMP},
      goods_type = #{goodsType,jdbcType=VARCHAR},
      specifications = #{specifications,jdbcType=VARCHAR},
      net_content = #{netContent,jdbcType=VARCHAR},
      product_standard = #{productStandard,jdbcType=VARCHAR},
      license_key = #{licenseKey,jdbcType=VARCHAR},
      storage_conditions = #{storageConditions,jdbcType=VARCHAR},
      quality_guarantee_period = #{qualityGuaranteePeriod,jdbcType=VARCHAR},
      edible_method = #{edibleMethod,jdbcType=VARCHAR},
      matters_needing_attention = #{mattersNeedingAttention,jdbcType=VARCHAR},
      manufacturer = #{manufacturer,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      place_of_origin = #{placeOfOrigin,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      delete_flag = #{deleteFlag,jdbcType=VARCHAR},
      info = #{info,jdbcType=VARCHAR},
      imge_url = #{imgeUrl,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>