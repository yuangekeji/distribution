<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.distribution.dao.member.mapper.more.MoreMemberMapper" >
  <resultMap id="BaseResultMap" type="com.distribution.dao.member.model.Member" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="member_phone" property="memberPhone" jdbcType="VARCHAR" />
    <result column="login_password" property="loginPassword" jdbcType="VARCHAR" />
    <result column="query_password" property="queryPassword" jdbcType="VARCHAR" />
    <result column="pay_password" property="payPassword" jdbcType="VARCHAR" />
    <result column="recommend_id" property="recommendId" jdbcType="INTEGER" />
    <result column="node_id" property="nodeId" jdbcType="INTEGER" />
    <result column="member_name" property="memberName" jdbcType="VARCHAR" />
    <result column="member_level" property="memberLevel" jdbcType="VARCHAR" />
    <result column="ID_number" property="idNumber" jdbcType="VARCHAR" />
    <result column="express_address" property="expressAddress" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="delete_flag" property="deleteFlag" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="member_post" property="memberPost" jdbcType="VARCHAR" />
    <result column="create_id" property="createId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_id" property="updateId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="order_amount" property="orderAmount" jdbcType="DECIMAL" />
    <result column="consignee" property="consignee" jdbcType="VARCHAR" />
    <result column="money_status" property="moneyStatus" jdbcType="VARCHAR" />
    <result column="bank_name" property="bankName" jdbcType="VARCHAR" />
    <result column="bank_user_name" property="bankUserName" jdbcType="VARCHAR" />
    <result column="card_number" property="cardNumber" jdbcType="VARCHAR" />
    <result column="is_operator" property="isOperator" jdbcType="VARCHAR" />
    <result column="is_sales_dept" property="isSalesDept" jdbcType="VARCHAR" />
    <result column="first_agent_cnt" property="firstAgentCnt" jdbcType="INTEGER" />
    <result column="recommend_name" property="recommendName" jdbcType="VARCHAR" />
    <result column="node_name" property="nodeName" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, member_phone, login_password, query_password, pay_password, recommend_id, node_id,
    member_name, member_level, ID_number, express_address, status, delete_flag, role_id,
    member_post, create_id, create_time, update_id, update_time, order_amount, consignee,
    money_status, bank_name, bank_user_name, card_number, is_operator, is_sales_dept,
    first_agent_cnt, recommend_name, node_name
  </sql>

   <sql id="where">
     <where>
       <if test="parameterMap.phone!=null and parameterMap.phone!=''">
         AND member_phone LIKE concat('%',concat('*',LTrim(RTrim(#{parameterMap.phone}))),'%') ESCAPE '*'
       </if>
       <if test="parameterMap.status!=null and parameterMap.status!=''">
         AND status = #{parameterMap.status}
       </if>
       <if test="parameterMap.start!=null and parameterMap.start!=''">
         AND create_time BETWEEN #{parameterMap.start} AND #{parameterMap.end}
       </if>
       <if test="parameterMap.recommendId!=null and parameterMap.recommendId!=''">
         AND recommend_id = #{parameterMap.recommendId}
       </if>
     </where>
   </sql>

  <sql id="pageLimit">
    <if test="pageSize!=null">
      <if test="offset!=null">
        LIMIT #{pageSize} OFFSET #{offset}
      </if>
    </if>
  </sql>

  <select id="login" parameterType="java.util.Map" resultMap="BaseResultMap">
    SELECT id, member_phone, recommend_id, node_id,
    member_name, member_level, express_address, status, role_id,
    member_post, create_time, order_amount, consignee,
    money_status, is_operator, is_sales_dept,
    first_agent_cnt, recommend_name, node_name FROM member WHERE member_phone = #{userName} AND login_password = #{password}
  </select>
  <select id="findMatchMemberQueryPwd" parameterType="java.util.Map" resultType="java.lang.Integer">
    SELECT count(0) as count
    FROM member
    WHERE id = #{memberId}
    AND member_phone = #{memberPhone}
    AND pay_password = #{payPassword}
  </select>
  <select id="getMemberByPhone" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/> FROM member WHERE member_phone = #{phone}
  </select>

  <select id="getMemberCount" parameterType="com.distribution.common.utils.Page" resultType="java.lang.Integer">
    SELECT COUNT(*) FROM member <include refid="where"/>
  </select>
  
  <select id="list" parameterType="com.distribution.common.utils.Page" resultMap="BaseResultMap">
    SELECT id, member_phone, recommend_id, node_id,
    member_name, member_level, express_address, status, role_id,
    member_post, create_time, order_amount, consignee,
    money_status, is_operator, is_sales_dept,
    first_agent_cnt, recommend_name, node_name FROM member <include refid="where"/> <include refid="pageLimit"/>
  </select>
</mapper>