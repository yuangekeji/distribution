<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.distribution.dao.memberBonus.mapper.MemberBonusMapper" >
  <resultMap id="BaseResultMap" type="com.distribution.dao.memberBonus.model.MemberBonus" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="bonus_date" property="bonusDate" jdbcType="TIMESTAMP" />
    <result column="bonus_type" property="bonusType" jdbcType="VARCHAR" />
    <result column="amout" property="amout" jdbcType="DOUBLE" />
    <result column="manage_fee" property="manageFee" jdbcType="DOUBLE" />
    <result column="actual_amout" property="actualAmout" jdbcType="DOUBLE" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="INTEGER" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, member_id, bonus_date, bonus_type, amout, manage_fee, actual_amout, order_id, 
    order_no, remarks, create_by, create_date, update_by, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.distribution.dao.memberBonus.model.MemberBonusExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from member_bonus
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from member_bonus
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from member_bonus
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.distribution.dao.memberBonus.model.MemberBonusExample" >
    delete from member_bonus
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.distribution.dao.memberBonus.model.MemberBonus" >
    insert into member_bonus (id, member_id, bonus_date, 
      bonus_type, amout, manage_fee, 
      actual_amout, order_id, order_no, 
      remarks, create_by, create_date, 
      update_by, update_time)
    values (#{id,jdbcType=INTEGER}, #{memberId,jdbcType=INTEGER}, #{bonusDate,jdbcType=TIMESTAMP}, 
      #{bonusType,jdbcType=VARCHAR}, #{amout,jdbcType=DOUBLE}, #{manageFee,jdbcType=DOUBLE}, 
      #{actualAmout,jdbcType=DOUBLE}, #{orderId,jdbcType=INTEGER}, #{orderNo,jdbcType=INTEGER}, 
      #{remarks,jdbcType=VARCHAR}, #{createBy,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.distribution.dao.memberBonus.model.MemberBonus" >
    insert into member_bonus
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="bonusDate != null" >
        bonus_date,
      </if>
      <if test="bonusType != null" >
        bonus_type,
      </if>
      <if test="amout != null" >
        amout,
      </if>
      <if test="manageFee != null" >
        manage_fee,
      </if>
      <if test="actualAmout != null" >
        actual_amout,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="bonusDate != null" >
        #{bonusDate,jdbcType=TIMESTAMP},
      </if>
      <if test="bonusType != null" >
        #{bonusType,jdbcType=VARCHAR},
      </if>
      <if test="amout != null" >
        #{amout,jdbcType=DOUBLE},
      </if>
      <if test="manageFee != null" >
        #{manageFee,jdbcType=DOUBLE},
      </if>
      <if test="actualAmout != null" >
        #{actualAmout,jdbcType=DOUBLE},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.distribution.dao.memberBonus.model.MemberBonusExample" resultType="java.lang.Integer" >
    select count(*) from member_bonus
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update member_bonus
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.memberId != null" >
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.bonusDate != null" >
        bonus_date = #{record.bonusDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bonusType != null" >
        bonus_type = #{record.bonusType,jdbcType=VARCHAR},
      </if>
      <if test="record.amout != null" >
        amout = #{record.amout,jdbcType=DOUBLE},
      </if>
      <if test="record.manageFee != null" >
        manage_fee = #{record.manageFee,jdbcType=DOUBLE},
      </if>
      <if test="record.actualAmout != null" >
        actual_amout = #{record.actualAmout,jdbcType=DOUBLE},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null" >
        order_no = #{record.orderNo,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update member_bonus
    set id = #{record.id,jdbcType=INTEGER},
      member_id = #{record.memberId,jdbcType=INTEGER},
      bonus_date = #{record.bonusDate,jdbcType=TIMESTAMP},
      bonus_type = #{record.bonusType,jdbcType=VARCHAR},
      amout = #{record.amout,jdbcType=DOUBLE},
      manage_fee = #{record.manageFee,jdbcType=DOUBLE},
      actual_amout = #{record.actualAmout,jdbcType=DOUBLE},
      order_id = #{record.orderId,jdbcType=INTEGER},
      order_no = #{record.orderNo,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.distribution.dao.memberBonus.model.MemberBonus" >
    update member_bonus
    <set >
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="bonusDate != null" >
        bonus_date = #{bonusDate,jdbcType=TIMESTAMP},
      </if>
      <if test="bonusType != null" >
        bonus_type = #{bonusType,jdbcType=VARCHAR},
      </if>
      <if test="amout != null" >
        amout = #{amout,jdbcType=DOUBLE},
      </if>
      <if test="manageFee != null" >
        manage_fee = #{manageFee,jdbcType=DOUBLE},
      </if>
      <if test="actualAmout != null" >
        actual_amout = #{actualAmout,jdbcType=DOUBLE},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.distribution.dao.memberBonus.model.MemberBonus" >
    update member_bonus
    set member_id = #{memberId,jdbcType=INTEGER},
      bonus_date = #{bonusDate,jdbcType=TIMESTAMP},
      bonus_type = #{bonusType,jdbcType=VARCHAR},
      amout = #{amout,jdbcType=DOUBLE},
      manage_fee = #{manageFee,jdbcType=DOUBLE},
      actual_amout = #{actualAmout,jdbcType=DOUBLE},
      order_id = #{orderId,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>