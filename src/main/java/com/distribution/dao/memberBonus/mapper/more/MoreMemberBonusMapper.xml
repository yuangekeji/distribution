<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.distribution.dao.memberBonus.mapper.more.MoreMemberBonusMapper" >
  <resultMap id="BaseResultMap" type="com.distribution.dao.memberBonus.model.MemberBonus" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="bonus_date" property="bonusDate" jdbcType="TIMESTAMP" />
    <result column="bonus_type" property="bonusType" jdbcType="VARCHAR" />
    <result column="amout" property="amout" jdbcType="DOUBLE" />
    <result column="manage_fee" property="manageFee" jdbcType="DOUBLE" />
    <result column="actual_amout" property="actualAmout" jdbcType="DOUBLE" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="BIGINT" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="MemberBonusListResultMap" type="com.distribution.dao.memberBonus.model.more.MoreMemberBonus" >
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="member_name" property="memberName" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="BIGINT" />
    <result column="order_date" property="orderDate" jdbcType="TIMESTAMP" />
    <result column="bonus_type" property="bonusType" jdbcType="VARCHAR" />
    <result column="order_start_date" property="orderStartDate" jdbcType="VARCHAR" />
    <result column="order_end_date" property="orderEndDate" jdbcType="VARCHAR" />
    <result column="recommend_id" property="recommendId" jdbcType="INTEGER" />
    <result column="recommend_name" property="recommendName" jdbcType="VARCHAR" />
    <result column="order_amount" property="orderAmount" jdbcType="DOUBLE" />
    <result column="amout_total" property="amoutTotal" jdbcType="DOUBLE" />
    <result column="manage_fee_total" property="manageFeeTotal" jdbcType="DOUBLE" />
    <result column="actual_amout_total" property="actualAmoutTotal" jdbcType="DOUBLE" />
  </resultMap>
  <resultMap id="MemberBonusDetailResultMap" type="com.distribution.dao.memberBonus.model.more.MoreMemberBonus" >
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="member_name" property="memberName" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="BIGINT" />
    <result column="order_date" property="orderDate" jdbcType="TIMESTAMP" />
    <result column="bonus_type" property="bonusType" jdbcType="VARCHAR" />
    <result column="order_start_date" property="orderStartDate" jdbcType="VARCHAR" />
    <result column="order_end_date" property="orderEndDate" jdbcType="VARCHAR" />
    <result column="recommend_id" property="recommendId" jdbcType="INTEGER" />
    <result column="recommend_name" property="recommendName" jdbcType="VARCHAR" />
    <result column="order_amount" property="orderAmount" jdbcType="DOUBLE" />
    <result column="amout_total" property="amoutTotal" jdbcType="DOUBLE" />
    <result column="manage_fee_total" property="manageFeeTotal" jdbcType="DOUBLE" />
    <result column="actual_amout_total" property="actualAmoutTotal" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, member_id, bonus_date, bonus_type, amout, manage_fee, actual_amout,
    order_id, order_no, remarks, create_by, create_date, update_by, update_time
  </sql>
  <sql id="where">
    <where>
        AND member_id = #{parameterMap.memberId}
        AND order_id = #{parameterMap.orderId}
        AND bonus_type = '3'
    </where>
  </sql>
  <sql id="pageLimit">
    <if test="pageSize!=null">
      <if test="offset!=null">
        LIMIT #{pageSize} OFFSET #{offset}
      </if>
    </if>
  </sql>
  <select id="getDividendDetails" resultMap="BaseResultMap" parameterType="com.distribution.common.utils.Page" >
    select
    <include refid="Base_Column_List" />
    from member_bonus
    <include refid="where"/>
    order by bonus_date desc
    <include refid="pageLimit"/>

  </select>
  <select id="getDividendDetailsCount" resultType="java.lang.Integer" parameterType="com.distribution.common.utils.Page" >
    select
    count(0) as count
    from member_bonus
    <include refid="where"/>
  </select>
  <sql id="whereMemberBonusList">
    <where>
          and mb.order_no = om.order_no
      <if test="parameterMap.memberId!=null and parameterMap.memberId!=''">
          and mb.member_id = #{parameterMap.memberId}
      </if>
      <if test="parameterMap.orderNo!=null and parameterMap.orderNo!=''">
          and mb.order_no = #{parameterMap.orderNo}
      </if>
      <if test="parameterMap.orderEndDate!=null and parameterMap.orderStartDate!=''">
          and DATE_FORMAT(mb.order_date,'%Y%m%d') &gt;= DATE_FORMAT(#{parameterMap.orderStartDate},'%Y%m%d')
      </if>
      <if test="parameterMap.orderEndDate!=null and parameterMap.orderEndDate!=''">
          and DATE_FORMAT(mb.order_date,'%Y%m%d') &lt;= DATE_FORMAT(#{parameterMap.orderEndDate},'%Y%m%d')
      </if>
          and mb.bonus_type not in ('6')
    </where>
  </sql>
  <select id="selectMemberBonusList" resultMap="MemberBonusListResultMap" parameterType="com.distribution.common.utils.Page" >
    select
      mb.member_id,
      member.member_name,
      mb.order_id,
      mb.order_no,
      mb.order_date,
    <if test="parameterMap.orderEndDate!=null and parameterMap.orderStartDate!=''">
      DATE_FORMAT(#{parameterMap.orderStartDate},'%Y%m%d') order_start_date,
    </if>
    <if test="parameterMap.orderEndDate!=null and parameterMap.orderEndDate!=''">
      DATE_FORMAT(#{parameterMap.orderStartDate},'%Y%m%d') order_end_date,
    </if>
      member.recommend_id,
      member.recommend_name,
      member.order_amount,
      mb.amout_total,
      mb.manage_fee_total,
      mb.actual_amout_total
      from (
        select
          om.member_id,
          mb.order_id,
          mb.order_no,
          mb.order_date order_date,
          sum(mb.amout) AS amout_total,
          sum(mb.manage_fee) AS manage_fee_total,
          sum(mb.actual_amout) AS actual_amout_total
        from
        member_bonus mb, order_master om
        <include refid="whereMemberBonusList"/>
        group by order_no
      <if test="parameterMap.chinaPresidentBonusYN==1">
      union all
      select
        member_id member_id,
        order_id,
        order_no,
        NULL order_date,
        amout AS amout_total,
        manage_fee AS manage_fee_total,
        actual_amout AS actual_amout_total
      from member_bonus
      where   bonus_type = '6'
          <if test="parameterMap.memberId!=null and parameterMap.memberId!=''">
            and   member_id = #{parameterMap.memberId}
          </if>
      </if>
      ) mb, member member
      where mb.member_id = member.id
      order by mb.order_id, mb.member_id
    <include refid="pageLimit"/>
  </select>
  <select id="selectMemberBonusListCount" resultType="java.lang.Integer" parameterType="com.distribution.common.utils.Page" >
    select
      count(0) as count
    from (
      select
        member_id
      from member_bonus
    where bonus_type not in ('6')
    <if test="parameterMap.memberId!=null and parameterMap.memberId!=''">
      and member_id = #{parameterMap.memberId}
    </if>
    <if test="parameterMap.orderNo!=null and parameterMap.orderNo!=''">
      and order_no = #{parameterMap.orderNo}
    </if>
    <if test="parameterMap.orderEndDate!=null and parameterMap.orderStartDate!=''">
      and DATE_FORMAT(order_date,'%Y%m%d') &gt;= DATE_FORMAT(#{parameterMap.orderStartDate},'%Y%m%d')
    </if>
    <if test="parameterMap.orderEndDate!=null and parameterMap.orderEndDate!=''">
      and DATE_FORMAT(order_date,'%Y%m%d') &lt;= DATE_FORMAT(#{parameterMap.orderEndDate},'%Y%m%d')
    </if>
      group by order_no
      <if test="parameterMap.chinaPresidentBonusYN==1">
      union all
      select
        member_id
      from member_bonus
      where   bonus_type = '6'
      <if test="parameterMap.memberId!=null and parameterMap.memberId!=''">
          and   member_id = #{parameterMap.memberId}
      </if>
      </if>
      ) mb
  </select>
  <sql id="whereMemberBonusDetail">
    <where>
        and mb.member_id = mm.id
      <if test="parameterMap.memberId!=null and parameterMap.memberId!=''">
        and mb.member_id = #{parameterMap.memberId}
      </if>
      <if test="parameterMap.orderNo!=null and parameterMap.orderNo!=''">
        and mb.order_no = #{parameterMap.orderNo}
      </if>
      <if test="parameterMap.orderEndDate!=null and parameterMap.orderStartDate!=''">
        and DATE_FORMAT(mb.order_date,'%Y%m%d') &gt;= DATE_FORMAT(#{parameterMap.orderStartDate},'%Y%m%d')
      </if>
      <if test="parameterMap.orderEndDate!=null and parameterMap.orderEndDate!=''">
        and DATE_FORMAT(mb.order_date,'%Y%m%d') &lt;= DATE_FORMAT(#{parameterMap.orderEndDate},'%Y%m%d')
      </if>
      and bonus_type not in ('6')
    </where>
  </sql>
  <select id="selectMemberBonusDetail" resultMap="MemberBonusDetailResultMap" parameterType="com.distribution.common.utils.Page" >
    select
      mb.member_id,
      mm.member_name,
      mb.order_id,
      mb.order_no,
      mb.bonus_type,
      sum(mb.amout) as amout_total,
      sum(mb.manage_fee) as manage_fee_total,
      sum(mb.actual_amout) as actual_amout_total
    from member_bonus mb, member mm
    <include refid="whereMemberBonusDetail"/>
    group by mb.member_id, mb.order_id, mb.order_no,mb.bonus_type
      order by mb.member_id desc
  </select>
</mapper>