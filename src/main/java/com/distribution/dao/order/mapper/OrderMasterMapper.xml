<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.distribution.dao.order.mapper.OrderMasterMapper" >
  <resultMap id="BaseResultMap" type="com.distribution.dao.order.model.OrderMaster" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="BIGINT" />
    <result column="order_category" property="orderCategory" jdbcType="CHAR" />
    <result column="order_amt" property="orderAmt" jdbcType="DECIMAL" />
    <result column="order_qty" property="orderQty" jdbcType="INTEGER" />
    <result column="discount" property="discount" jdbcType="INTEGER" />
    <result column="act_amt" property="actAmt" jdbcType="DECIMAL" />
    <result column="express_fee" property="expressFee" jdbcType="DECIMAL" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="receive_name" property="receiveName" jdbcType="VARCHAR" />
    <result column="express_address" property="expressAddress" jdbcType="VARCHAR" />
    <result column="recevive_phone" property="recevivePhone" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="member_level" property="memberLevel" jdbcType="VARCHAR" />
    <result column="order_statues" property="orderStatues" jdbcType="CHAR" />
    <result column="create_id" property="createId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_id" property="updateId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_no, order_category, order_amt, order_qty, discount, act_amt, express_fee, 
    member_id, receive_name, express_address, recevive_phone, remark, member_level, order_statues, 
    create_id, create_time, update_id, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.distribution.dao.order.model.OrderMasterExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from order_master
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order_master
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order_master
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.distribution.dao.order.model.OrderMasterExample" >
    delete from order_master
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.distribution.dao.order.model.OrderMaster" >
    insert into order_master (id, order_no, order_category, 
      order_amt, order_qty, discount, 
      act_amt, express_fee, member_id, 
      receive_name, express_address, recevive_phone, 
      remark, member_level, order_statues, 
      create_id, create_time, update_id, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{orderNo,jdbcType=BIGINT}, #{orderCategory,jdbcType=CHAR}, 
      #{orderAmt,jdbcType=DECIMAL}, #{orderQty,jdbcType=INTEGER}, #{discount,jdbcType=INTEGER}, 
      #{actAmt,jdbcType=DECIMAL}, #{expressFee,jdbcType=DECIMAL}, #{memberId,jdbcType=INTEGER}, 
      #{receiveName,jdbcType=VARCHAR}, #{expressAddress,jdbcType=VARCHAR}, #{recevivePhone,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{memberLevel,jdbcType=VARCHAR}, #{orderStatues,jdbcType=CHAR}, 
      #{createId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateId,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.distribution.dao.order.model.OrderMaster" >
    insert into order_master
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="orderCategory != null" >
        order_category,
      </if>
      <if test="orderAmt != null" >
        order_amt,
      </if>
      <if test="orderQty != null" >
        order_qty,
      </if>
      <if test="discount != null" >
        discount,
      </if>
      <if test="actAmt != null" >
        act_amt,
      </if>
      <if test="expressFee != null" >
        express_fee,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="receiveName != null" >
        receive_name,
      </if>
      <if test="expressAddress != null" >
        express_address,
      </if>
      <if test="recevivePhone != null" >
        recevive_phone,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="memberLevel != null" >
        member_level,
      </if>
      <if test="orderStatues != null" >
        order_statues,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateId != null" >
        update_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=BIGINT},
      </if>
      <if test="orderCategory != null" >
        #{orderCategory,jdbcType=CHAR},
      </if>
      <if test="orderAmt != null" >
        #{orderAmt,jdbcType=DECIMAL},
      </if>
      <if test="orderQty != null" >
        #{orderQty,jdbcType=INTEGER},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=INTEGER},
      </if>
      <if test="actAmt != null" >
        #{actAmt,jdbcType=DECIMAL},
      </if>
      <if test="expressFee != null" >
        #{expressFee,jdbcType=DECIMAL},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="receiveName != null" >
        #{receiveName,jdbcType=VARCHAR},
      </if>
      <if test="expressAddress != null" >
        #{expressAddress,jdbcType=VARCHAR},
      </if>
      <if test="recevivePhone != null" >
        #{recevivePhone,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="memberLevel != null" >
        #{memberLevel,jdbcType=VARCHAR},
      </if>
      <if test="orderStatues != null" >
        #{orderStatues,jdbcType=CHAR},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null" >
        #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.distribution.dao.order.model.OrderMasterExample" resultType="java.lang.Integer" >
    select count(*) from order_master
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order_master
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null" >
        order_no = #{record.orderNo,jdbcType=BIGINT},
      </if>
      <if test="record.orderCategory != null" >
        order_category = #{record.orderCategory,jdbcType=CHAR},
      </if>
      <if test="record.orderAmt != null" >
        order_amt = #{record.orderAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.orderQty != null" >
        order_qty = #{record.orderQty,jdbcType=INTEGER},
      </if>
      <if test="record.discount != null" >
        discount = #{record.discount,jdbcType=INTEGER},
      </if>
      <if test="record.actAmt != null" >
        act_amt = #{record.actAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.expressFee != null" >
        express_fee = #{record.expressFee,jdbcType=DECIMAL},
      </if>
      <if test="record.memberId != null" >
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.receiveName != null" >
        receive_name = #{record.receiveName,jdbcType=VARCHAR},
      </if>
      <if test="record.expressAddress != null" >
        express_address = #{record.expressAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.recevivePhone != null" >
        recevive_phone = #{record.recevivePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.memberLevel != null" >
        member_level = #{record.memberLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.orderStatues != null" >
        order_statues = #{record.orderStatues,jdbcType=CHAR},
      </if>
      <if test="record.createId != null" >
        create_id = #{record.createId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateId != null" >
        update_id = #{record.updateId,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order_master
    set id = #{record.id,jdbcType=INTEGER},
      order_no = #{record.orderNo,jdbcType=BIGINT},
      order_category = #{record.orderCategory,jdbcType=CHAR},
      order_amt = #{record.orderAmt,jdbcType=DECIMAL},
      order_qty = #{record.orderQty,jdbcType=INTEGER},
      discount = #{record.discount,jdbcType=INTEGER},
      act_amt = #{record.actAmt,jdbcType=DECIMAL},
      express_fee = #{record.expressFee,jdbcType=DECIMAL},
      member_id = #{record.memberId,jdbcType=INTEGER},
      receive_name = #{record.receiveName,jdbcType=VARCHAR},
      express_address = #{record.expressAddress,jdbcType=VARCHAR},
      recevive_phone = #{record.recevivePhone,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      member_level = #{record.memberLevel,jdbcType=VARCHAR},
      order_statues = #{record.orderStatues,jdbcType=CHAR},
      create_id = #{record.createId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_id = #{record.updateId,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.distribution.dao.order.model.OrderMaster" >
    update order_master
    <set >
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=BIGINT},
      </if>
      <if test="orderCategory != null" >
        order_category = #{orderCategory,jdbcType=CHAR},
      </if>
      <if test="orderAmt != null" >
        order_amt = #{orderAmt,jdbcType=DECIMAL},
      </if>
      <if test="orderQty != null" >
        order_qty = #{orderQty,jdbcType=INTEGER},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=INTEGER},
      </if>
      <if test="actAmt != null" >
        act_amt = #{actAmt,jdbcType=DECIMAL},
      </if>
      <if test="expressFee != null" >
        express_fee = #{expressFee,jdbcType=DECIMAL},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="receiveName != null" >
        receive_name = #{receiveName,jdbcType=VARCHAR},
      </if>
      <if test="expressAddress != null" >
        express_address = #{expressAddress,jdbcType=VARCHAR},
      </if>
      <if test="recevivePhone != null" >
        recevive_phone = #{recevivePhone,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="memberLevel != null" >
        member_level = #{memberLevel,jdbcType=VARCHAR},
      </if>
      <if test="orderStatues != null" >
        order_statues = #{orderStatues,jdbcType=CHAR},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null" >
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.distribution.dao.order.model.OrderMaster" >
    update order_master
    set order_no = #{orderNo,jdbcType=BIGINT},
      order_category = #{orderCategory,jdbcType=CHAR},
      order_amt = #{orderAmt,jdbcType=DECIMAL},
      order_qty = #{orderQty,jdbcType=INTEGER},
      discount = #{discount,jdbcType=INTEGER},
      act_amt = #{actAmt,jdbcType=DECIMAL},
      express_fee = #{expressFee,jdbcType=DECIMAL},
      member_id = #{memberId,jdbcType=INTEGER},
      receive_name = #{receiveName,jdbcType=VARCHAR},
      express_address = #{expressAddress,jdbcType=VARCHAR},
      recevive_phone = #{recevivePhone,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      member_level = #{memberLevel,jdbcType=VARCHAR},
      order_statues = #{orderStatues,jdbcType=CHAR},
      create_id = #{createId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_id = #{updateId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>