<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.distribution.dao.platformAccount.mapper.PlatformAccountMapper">
  <resultMap id="BaseResultMap" type="com.distribution.dao.platformAccount.model.PlatformAccount">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="total_sales" jdbcType="DECIMAL" property="totalSales" />
    <result column="total_bonus" jdbcType="DECIMAL" property="totalBonus" />
    <result column="platform_amount" jdbcType="DECIMAL" property="platformAmount" />
    <result column="account_amount" jdbcType="DECIMAL" property="accountAmount" />
    <result column="pool_amount" jdbcType="DECIMAL" property="poolAmount" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, total_sales, total_bonus, platform_amount, account_amount, pool_amount, update_time, 
    update_by
  </sql>
  <select id="selectByExample" parameterType="com.distribution.dao.platformAccount.model.PlatformAccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from platform_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from platform_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from platform_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.distribution.dao.platformAccount.model.PlatformAccountExample">
    delete from platform_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.distribution.dao.platformAccount.model.PlatformAccount">
    insert into platform_account (id, total_sales, total_bonus, 
      platform_amount, account_amount, pool_amount, 
      update_time, update_by)
    values (#{id,jdbcType=INTEGER}, #{totalSales,jdbcType=DECIMAL}, #{totalBonus,jdbcType=DECIMAL}, 
      #{platformAmount,jdbcType=DECIMAL}, #{accountAmount,jdbcType=DECIMAL}, #{poolAmount,jdbcType=DECIMAL}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.distribution.dao.platformAccount.model.PlatformAccount">
    insert into platform_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="totalSales != null">
        total_sales,
      </if>
      <if test="totalBonus != null">
        total_bonus,
      </if>
      <if test="platformAmount != null">
        platform_amount,
      </if>
      <if test="accountAmount != null">
        account_amount,
      </if>
      <if test="poolAmount != null">
        pool_amount,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="totalSales != null">
        #{totalSales,jdbcType=DECIMAL},
      </if>
      <if test="totalBonus != null">
        #{totalBonus,jdbcType=DECIMAL},
      </if>
      <if test="platformAmount != null">
        #{platformAmount,jdbcType=DECIMAL},
      </if>
      <if test="accountAmount != null">
        #{accountAmount,jdbcType=DECIMAL},
      </if>
      <if test="poolAmount != null">
        #{poolAmount,jdbcType=DECIMAL},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.distribution.dao.platformAccount.model.PlatformAccountExample" resultType="java.lang.Long">
    select count(*) from platform_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update platform_account
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.totalSales != null">
        total_sales = #{record.totalSales,jdbcType=DECIMAL},
      </if>
      <if test="record.totalBonus != null">
        total_bonus = #{record.totalBonus,jdbcType=DECIMAL},
      </if>
      <if test="record.platformAmount != null">
        platform_amount = #{record.platformAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.accountAmount != null">
        account_amount = #{record.accountAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.poolAmount != null">
        pool_amount = #{record.poolAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update platform_account
    set id = #{record.id,jdbcType=INTEGER},
      total_sales = #{record.totalSales,jdbcType=DECIMAL},
      total_bonus = #{record.totalBonus,jdbcType=DECIMAL},
      platform_amount = #{record.platformAmount,jdbcType=DECIMAL},
      account_amount = #{record.accountAmount,jdbcType=DECIMAL},
      pool_amount = #{record.poolAmount,jdbcType=DECIMAL},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.distribution.dao.platformAccount.model.PlatformAccount">
    update platform_account
    <set>
      <if test="totalSales != null">
        total_sales = #{totalSales,jdbcType=DECIMAL},
      </if>
      <if test="totalBonus != null">
        total_bonus = #{totalBonus,jdbcType=DECIMAL},
      </if>
      <if test="platformAmount != null">
        platform_amount = #{platformAmount,jdbcType=DECIMAL},
      </if>
      <if test="accountAmount != null">
        account_amount = #{accountAmount,jdbcType=DECIMAL},
      </if>
      <if test="poolAmount != null">
        pool_amount = #{poolAmount,jdbcType=DECIMAL},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.distribution.dao.platformAccount.model.PlatformAccount">
    update platform_account
    set total_sales = #{totalSales,jdbcType=DECIMAL},
      total_bonus = #{totalBonus,jdbcType=DECIMAL},
      platform_amount = #{platformAmount,jdbcType=DECIMAL},
      account_amount = #{accountAmount,jdbcType=DECIMAL},
      pool_amount = #{poolAmount,jdbcType=DECIMAL},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>